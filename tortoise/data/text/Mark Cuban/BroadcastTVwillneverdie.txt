When was the last time you recieved a live multicast feed across multiple networks over the internet? What’s a multicast stream? It’s a stream of bits that can be just about anything, a software program, a movie, a game, a tv show. It doesn’t matter.
When a file or live event is multicast, rather than having a copy of the program delivered, uniquely from each source to each destination (unicast delivery), the stream of bits is replicated through the routers on the network so that one copy exists on the network at any given time. The router basically grabs the stream and provides it to the users on its network segment that want it.
The value in doing this is that the bandwidth savings are huge. For live events it’s the only way to truly conserve bandwidth. For on demand, it even blows away Bit torrent type peer to peer delivery because the routers are always there toact as the peers on any network segment and you can control and monitor the distribution more cleanly.
But anetwork of multicast enabled networks,linked together to form a more efficient internet doesn’t exist. At least that I know of. But it almost did.
Back in the late 1990s, Darin Divinia and our engineers were working hard with UUNet and other networks to test and  optimize multicast tunnels on their networks and to peer them with some level of QOS so that Broadcast.com could deliver live events and files more cost efficiently.
We also worked hard with Microsoft Windows Media and Real Networks to deliver live events via multicast. We even had seperate links for users who were on multicast enabled networks to click on so they could pull a multicast feed of a live eventat a higher quality. I think we may have even gotten as high as 12 pct of users on some events. It was one of the most important projects we had going.
But unless it has been hibernating somewhere without me knowing about it, the project died when I wasn’t at Yahoo to champion it any longer.
This isn’t to say that an internet with multicast tunnels routed throughout the net to any end user cant happen. It’s just to say that it isn’t anywhere I can find it right now.Without it, there is no such thing as bandwidth efficient LIVE internet TV. Without it, there is no equivalent to broadcastTV on the internet. Without it, there is no possible way broadcast TV, defined as what we see on major networks that own broadcast spectrum, ala ABC, CBS, NBC, WB, UPN, etc. is going away anytime soon.
The internet can’t support the equivalent of broadcast TV because the internet can’t broadcast. It can deliever individual (unicast streams) streams, but that’s it. This is why AOLstreaming 350k simultaneous Live8 users was a big deal. Instead ofa single 300k video stream that every one tuned into, every viewer had to have their own 300kstream. That’s a boatload of bandwidth and is expensive.
Whathappens when 80mm people want to watch the SuperBowl?What happens when a measly 4mm want to watch a show? What happens when they want to see the show in 1080i HD?
Aslong asthere are TV shows or events that can capture audiences in the millions, the only place to deliver those shows live will be on good old fashioned cable, satellite or broadcast or some other broadcast spectrum delivered TV. It ain’t gonna be the net anytime soon. That’s why broacastTV ain’t going away.
And while I’m on the technical side of TV, it’s going to be very, very interesting to see how IPTV plays out on networks. Traditional TV delivered on cable like networks is basically multicast. It’s always on and viewers just turn the channel to tap into the channel feed. There is enough bandwidth for each channel, and the network can support an unlimited number of viewers.
In the IPTV world, a TV signal for a channel is only delivered if someone has requested it. So if no one is watching VH1 Classics, the channel is not delivered over the network , saving bandwidth. Bandwidth conservation is particularly important in a world of ever expanding digital services including HDTV, where the capital isn’t available or it doesn’t make sense to add more bandwidth to the network.
But the problem with IPTV is the N+1 Disaster. In an IPTV world, there isn’t enough bandwidth reserved on the network so that ifeverychannelis requested, it can be delivered. Which means that it’s possible that someone could change to a channel, lets say BET Jazz, be the first to want to watch that channel in a while, and they would get a message saying it wasn’t currently available, try back later.
That is the N+1 Disaster.
Networks can statistically optimize so that the chances of this happening are reduced, but they cant ever elminate it. It’s going to be interesting to see what happens, when it happens.
