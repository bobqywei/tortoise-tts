The internet has been dead and boring for a while now.  It has reached a point of stability where flashes  of technological creativity are rare, but  every now and then some new technology can put a spark back in the ole gal (no sexism intended).
If you haven’t heard of WebHooks or PubSubHubBub its about time you did. Both are designed to  simplify and optimize the web.
Webhooks let applications talk to each other using very simple HTTP. Webhook enabled applications run (so far) on app hosting sites in the cloud.  What makes them different is that they constantly scan  for POSTS to a designated URL.   To use the application, you register your application with the other webhook enabled application and provide  a callback URL.  You POST   data from your app to the url of the receiving app, and monitor the callback URL for its response. Your app then takes the POST it received and processes it.
I will give you a simple example. Your accountant sets up an app for all their customers that has all the sales tax rules for every community in every state.  Every time your company makes a sale, your oline store application sends the transaction ID, amount of taxable goods and the long zip code where the sale was made.  The webhooks enabled  app receives it, calculates the correct salestax  and immediately sends back the result to your online store which  incorporates  the local sales tax information it received in the invoice as the customer checks out.
This is a very simple example of using Webhooks, you will be able to come up with much better.
Pubsubhubbub (PSHB) is a realtime, multicasting webhooks enabled  publish and subscribe system.  Historically on the net, most information is received after it is pulled.  For example, we set up receive intervals for our email. Our browsers update our RSS feeds at pre determined intervals. We repeat the same searches over and over, just looking to see if there is anything new. Even when we get alerts for new email or information, the alerts are generated by actively polling the source. PSHB changes that.
The PSHB hubs are cloud based distribution centers.  Publishers choose to distribute their data through any number of publicly availabe hubs.  Subscribers choose to receive their “subscriptions” or data through the Hub. The beauty of the hub and why this makes sense is  because the HUB multicasts the data to each publishers’ subscribers, is easily scalable  and it distributes to subscribers in realtime. Every time a publisher has something new it can post the data to the PSHB, which knows who that publishers’ subscribers are and immediately multicasts the new data to all the subscribers. In real time.
The implications and opportunities to change business on the web, and actually to any device that can subscribe to the HUBs are huge.
This could be an open door for the content business. For instance, currently aggregators have to get their news the old fashioned way, through RSS feeds and news alerts that they retrieve throughout the day. That is not realtime news.  Using The Associated Press as an example, AP could post their stories to a HUB. In realtime, the HUB can update member websites so that they will always have information first, before any aggregator.   It may not take long for aggregators to recognize the new data on the member sites, but they won’t have it first.
The New York Times could do the same thing. Subscribers could get everything first, in realtime. Then after some delay which might be 1 minute, it might be 30 minutes depending on what the paper thinks is the value related to timeliness, it could post on the website and on twitter and facebook as updates. Would NY Times online readers pay $1 a month to be guaranteed that they get their news first, before anyone else ? I dont know.
In the sports world, text based play by play websites could be updated in realtime rather than pulling every 30 seconds or requiring the user to hit refresh every few seconds.
Huge databases can talk to huge databases and exchange data more efficiently, hopefully increasing the value of the information. Medical databases, crime databases, any database hosted by different organizations could use webhooks and HUBS to agree to keep each other up to date.
This is all JUST beginning. Its all brand spanking new.  Already  extensions like Superfeedr are starting to appear, designed to scale.
Dive in and take advantage of the opportunity, ignore it at your own peril
m
